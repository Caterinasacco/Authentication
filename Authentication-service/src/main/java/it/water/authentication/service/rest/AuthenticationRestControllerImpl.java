package it.water.authentication.service.rest;

import it.water.authentication.api.AuthenticationApi;
import it.water.authentication.api.rest.AuthenticationRestApi;
import it.water.core.api.security.Authenticable;
import it.water.core.api.service.rest.FrameworkRestController;
import it.water.core.interceptors.annotations.Inject;
import lombok.Setter;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import java.time.Instant;
import java.util.HashMap;
import java.util.Map;


/**
 * @Generated by Water Generator
 * Rest Api Class for Authentication entity.
 */
@FrameworkRestController(referredRestApi = AuthenticationRestApi.class)
public class AuthenticationRestControllerImpl implements AuthenticationRestApi {
    private static Logger log = LoggerFactory.getLogger(AuthenticationRestControllerImpl.class.getName());

    @Inject
    @Setter
    private AuthenticationApi authenticationApi;

    @Override
    public Map<String, String> login(String username, String password) {
        log.debug("User {} is logging in ...", username);
        Map<String, String> response = new HashMap<>();
        Authenticable authenticable = authenticationApi.login(username, password);
        log.debug("User has logged in succesfully at: {} - {}", username, Instant.now());
        String token = authenticationApi.generateToken(authenticable);
        response.put("token", token);
        return response;
    }
}
